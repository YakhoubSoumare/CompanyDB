// <auto-generated />
using CompanyDB.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyDB.Data.Migrations
{
    [DbContext(typeof(CompanyDBContext))]
    partial class CompanyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CompanyDB.Data.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fitness Company",
                            OrganizationNumber = "5555-4444"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Test Company",
                            OrganizationNumber = "929292Test"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Third Company",
                            OrganizationNumber = "333-333"
                        });
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Name = "Economy"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Name = "Market"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 1,
                            Name = "Facility"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 2,
                            Name = "TestDepartment"
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 3,
                            Name = "TestDepartment2"
                        });
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TradeUnion")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 5,
                            FirstName = "Yakhoub",
                            LastName = "Soumare",
                            Salary = 1000.00m,
                            TradeUnion = false
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 5,
                            FirstName = "Christine",
                            LastName = "Svensson",
                            Salary = 1500.00m,
                            TradeUnion = true
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 5,
                            FirstName = "Ismael",
                            LastName = "Smith",
                            Salary = 800.00m,
                            TradeUnion = false
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            FirstName = "Robban",
                            LastName = "Matsson",
                            Salary = 2000.00m,
                            TradeUnion = true
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 4,
                            FirstName = "Eric",
                            LastName = "Sarr",
                            Salary = 2100.00m,
                            TradeUnion = false
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 1,
                            FirstName = "Ahmed",
                            LastName = "Winclar",
                            Salary = 1900.00m,
                            TradeUnion = true
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 2,
                            FirstName = "Mahe",
                            LastName = "Yussuf",
                            Salary = 2200.00m,
                            TradeUnion = false
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 1,
                            FirstName = "Jennifer",
                            LastName = "Bavul",
                            Salary = 1900.00m,
                            TradeUnion = false
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 4,
                            FirstName = "Amina",
                            LastName = "Nkuku",
                            Salary = 2300.00m,
                            TradeUnion = true
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 6,
                            FirstName = "ttt",
                            LastName = "hshs",
                            Salary = 200.00m,
                            TradeUnion = false
                        });
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.EmployeePosition", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("EmployeePositions");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            PositionId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            PositionId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            PositionId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            PositionId = 1
                        },
                        new
                        {
                            EmployeeId = 4,
                            PositionId = 7
                        },
                        new
                        {
                            EmployeeId = 5,
                            PositionId = 3
                        },
                        new
                        {
                            EmployeeId = 6,
                            PositionId = 4
                        },
                        new
                        {
                            EmployeeId = 7,
                            PositionId = 6
                        },
                        new
                        {
                            EmployeeId = 8,
                            PositionId = 5
                        },
                        new
                        {
                            EmployeeId = 9,
                            PositionId = 3
                        },
                        new
                        {
                            EmployeeId = 10,
                            PositionId = 9
                        });
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Site Responsible"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Site Manager"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Sales Corporate"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Economist"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Financial Manager"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Market Boss"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Marketer"
                        },
                        new
                        {
                            Id = 8,
                            Title = "Area Manager"
                        },
                        new
                        {
                            Id = 9,
                            Title = "TestPosition"
                        },
                        new
                        {
                            Id = 10,
                            Title = "Second TestPosition"
                        });
                });

            modelBuilder.Entity("EmployeePosition", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("PositionsId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "PositionsId");

                    b.HasIndex("PositionsId");

                    b.ToTable("EmployeePosition");
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.Department", b =>
                {
                    b.HasOne("CompanyDB.Data.Entities.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.Employee", b =>
                {
                    b.HasOne("CompanyDB.Data.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.EmployeePosition", b =>
                {
                    b.HasOne("CompanyDB.Data.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyDB.Data.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("EmployeePosition", b =>
                {
                    b.HasOne("CompanyDB.Data.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyDB.Data.Entities.Position", null)
                        .WithMany()
                        .HasForeignKey("PositionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.Company", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("CompanyDB.Data.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
